# - repo: tpope/vim-dadbod
# 
# - repo: kristijanhusak/vim-dadbod-ui
#   on_cmd:
#     [DBUIToggle, DBUIAddConnection, DBUI, DBUIFindBuffer, DBUIRenameBuffer]
#   on_source: vim-dadbod
#   hook_source: |
#     let g:db_ui_show_help = 0
#     let g:db_ui_win_position = 'left'
#     let g:db_ui_use_nerd_fonts = 1
#     let g:db_ui_winwidth = 35
#     let g:db_ui_save_location = getenv("HOME") . '/.cache/vim/db_ui_queries'
#     let g:dbs = luaeval('require("internal.selfunc").load_dbs')()

- repo: editorconfig/editorconfig-vim
  on_ft: [go, typescript, javascript, vim, rust, markdown]

# - repo: glepnir/indent-guides.nvim
#   on_event: BufReadPre
#   hook_source: |-
#     lua <<EOF
#     require('indent_guides').setup {
#       even_colors = { fg ='NONE',bg='#23272e'},
#       odd_colors = {fg='NONE',bg='#23272e'}
#     }
#     EOF

- repo: Yggdroot/indentLine
  on_event: BufReadPre
  hook_source: |
    let g:indentLine_enabled = 1
    let g:indentLine_char='â”†'
    let g:indentLine_fileTypeExclude = ['defx', 'denite', 'dashboard', 'tagbar', 'vista_kind', 'vista', 'rnvimr']
    let g:indentLine_concealcursor = 'niv'
    let g:indentLine_showFirstIndentLevel =1
    autocmd! FileType dashboard let g:indentLine_enabled = 0
      \| autocmd BufLeave <buffer> let g:indentLine_enabled = 1

# - repo: glepnir/prodoc.nvim
#   on_event: BufReadPre

- repo: liuchengxu/vista.vim
  on_cmd: [Vista, Vista!, Vista!!]
  hook_source: |
    let g:vista#renderer#enable_icon = 1
    let g:vista_disable_statusline = 1
    let g:vista_default_executive = 'coc'
    " let g:vista_default_executive = 'ctags'
    let g:vista_echo_cursor_strategy = 'floating_win'
    let g:vista_vimwiki_executive = 'markdown'
    let g:vista_executive_for = {
      \ 'markdown': 'toc',
      \ 'python': 'coc',
      \ 'vim': 'coc',
      \ 'cpp': 'coc',
      \ 'cu': 'coc',
      \ 'cc': 'coc',
      \ }
    let g:vista#renderer#icons = {
                \   "function": "\uf794",
                \   "variable": "\u0ec2",
                \  }

- repo: mhartington/formatter.nvim
  on_ft: [typescript,typescriptreact,lua]
  on_cmd: Format
  hook_source: |-
    lua <<EOF
    require('formatter').setup({
      logging = false,
      filetype = {
        typescriptreact = {
          function()
              return {
                exe = "prettier",
                args = {"--stdin-filepath", vim.api.nvim_buf_get_name(0), '--single-quote'},
                stdin = true
              }
            end
        },
        typescript = {
          function()
              return {
                exe = "prettier",
                args = {"--stdin-filepath", vim.api.nvim_buf_get_name(0), '--single-quote'},
                stdin = true
              }
            end
        },
        lua = {
            -- luafmt
            function()
              return {
                exe = "lua-format",
                args = {"--indent-count", 2, "--stdin"},
                stdin = true
              }
            end
          }
        }
      })
    EOF
